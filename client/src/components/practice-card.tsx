import { useState, Suspense, lazy } from "react";
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip";

// Lazy load icons
const PracticeCardIcon = lazy(() => import("./practice-card-icons"));

interface PracticeCardProps {
  index: number;
}

const practices = [
  {
    iconKey: "privacy",
    title: "Data Privacy & Security",
    description: "Keep customer, supplier, and company data secure when using AI tools.",
    examples: [
      "Remove customer names, account numbers, and sensitive order details before asking ChatGPT for help",
      "Never directly upload supplier pricing sheetsâ€”summarize or anonymize data first",
      "Use our approved company password manager to securely access AI tools",
      "Clear your ChatGPT conversation history immediately after completing sensitive tasks"
    ],
    tooltip: "Protect sensitive business information",
    quickTip: "Always sanitize sensitive information before inputting into AI"
  },
  {
    iconKey: "fairness",
    title: "Fairness & Validation",
    description: "Ensure AI-generated content is accurate, unbiased, and fair for all customers and suppliers.",
    examples: [
      "Cross-check AI-recommended pricing against official supplier catalogs",
      "Verify AI-generated supplier quotes and inventory updates before sending",
      "Test AI responses with diverse product categories to ensure consistency",
      "Double-check automated email responses for accuracy and tone"
    ],
    tooltip: "Maintain accuracy and fairness in AI operations",
    quickTip: "Always verify AI suggestions against trusted official sources"
  },
  {
    iconKey: "smart",
    title: "Smart AI Usage",
    description: "Get the most value from AI by starting with repetitive or time-consuming daily tasks.",
    examples: [
      "Use ChatGPT to quickly format and clean up supplier data files",
      "Draft initial supplier communication emails using AI",
      "Leverage AI to assist with complex Excel formulas for inventory tracking",
      "Summarize lengthy supplier documents or internal reports swiftly with AI"
    ],
    tooltip: "Leverage AI to boost productivity",
    quickTip: "Integrate AI gradually into routine workflows first"
  },
  {
    iconKey: "quality",
    title: "Quality Control",
    description: "Always verify AI outputs carefully before integrating them into business operations.",
    examples: [
      "Check AI-generated pricing carefully before sharing with customers",
      "Verify product specifications generated by AI against manufacturer-provided data",
      "Test AI-suggested inventory or sales formulas on sample datasets first",
      "Request peer review for important content generated using ChatGPT"
    ],
    tooltip: "Maintain high accuracy in AI-assisted work",
    quickTip: "Review critical information twiceâ€”AI helps, but humans approve"
  },
  {
    iconKey: "team",
    title: "Team Collaboration",
    description: "Share AI success stories and best practices openly to elevate the team's productivity.",
    examples: [
      "Share effective ChatGPT prompts for frequent supplier-related tasks",
      "Maintain a shared team knowledge base detailing which AI tools excel at specific tasks",
      "Regularly update your team about new AI features and practical uses",
      "Celebrate and share AI productivity wins openly within Teams or Monday.com"
    ],
    tooltip: "Build collective AI expertise",
    quickTip: "Document and communicate successful AI-driven workflows regularly"
  },
  {
    iconKey: "integration",
    title: "ERP & CRM Integration",
    description: "Safely leverage AI alongside business-critical systems like Dynamics 365, Salespad, and Monday.com.",
    examples: [
      "Use AI to troubleshoot Dynamics 365 Business Central workflow logic",
      "Request ChatGPT assistance for formatting or generating Salespad reports",
      "Optimize Monday.com templates using AI suggestions without exposing sensitive data",
      "Always secure system passwords and user credentials away from AI environments"
    ],
    tooltip: "Integrate AI with existing systems safely",
    quickTip: "Never input or share login credentials or sensitive ERP/CRM data with AI tools"
  },
  {
    iconKey: "oversight",
    title: "Human Oversight",
    description: "Maintain human judgment and oversightâ€”AI assists, but humans decide.",
    examples: [
      "Review AI-generated supplier or customer-facing reports thoroughly before distribution",
      "Manually validate critical AI-calculated pricing or inventory data",
      "Maintain human approval on all final customer communications and sensitive negotiations",
      "Clearly identify scenarios where direct human interaction is more appropriate"
    ],
    tooltip: "Maintain control over AI processes",
    quickTip: "Never fully automate critical business decisions without human review"
  },
  {
    iconKey: "performance",
    title: "Performance Tracking",
    description: "Actively monitor and record how AI enhances productivity and quality in your workflow.",
    examples: [
      "Track time saved using ChatGPT to streamline data entry and report preparation",
      "Document successes and improvements in supplier negotiations with AI assistance",
      "Report AI inaccuracies promptly for continuous improvement",
      "Regularly share documented productivity gains achieved through AI with your team"
    ],
    tooltip: "Measure AI effectiveness",
    quickTip: "Measure and communicate the impact of AI regularly"
  }
];

export default function PracticeCard({ index }: PracticeCardProps) {
  const [isLoaded, setIsLoaded] = useState(false);
  const practice = practices[index];

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.3, delay: index * 0.1 }}
      onAnimationComplete={() => setIsLoaded(true)}
    >
      <TooltipProvider>
        <Tooltip>
          <TooltipTrigger asChild>
            <Card className="transition-all duration-300 hover:shadow-lg cursor-help border-primary/10">
              <CardHeader className="pb-2">
                <div className="flex items-center gap-3">
                  <div className="p-2 rounded-lg bg-primary/10">
                    <Suspense fallback={<div className="w-8 h-8" />}>
                      {isLoaded && <PracticeCardIcon iconKey={practice.iconKey} />}
                    </Suspense>
                  </div>
                  <CardTitle className="text-xl">{practice.title}</CardTitle>
                </div>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground mb-4">{practice.description}</p>
                <div className="bg-primary/5 p-3 rounded-lg mb-4">
                  <p className="text-sm font-medium text-primary">ðŸ’¡ Quick Tip:</p>
                  <p className="text-sm">{practice.quickTip}</p>
                </div>
                <div className="space-y-2">
                  <h3 className="font-medium text-sm text-primary">Daily Examples:</h3>
                  <ul className="text-sm space-y-2">
                    {practice.examples.map((example, i) => (
                      <li key={i} className="flex items-center gap-2">
                        <div className="h-1.5 w-1.5 rounded-full bg-primary" />
                        <span>{example}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              </CardContent>
            </Card>
          </TooltipTrigger>
          <TooltipContent 
            side="top" 
            className="max-w-[200px] text-center bg-primary/5 backdrop-blur-sm border-primary/20"
          >
            <p>{practice.tooltip}</p>
          </TooltipContent>
        </Tooltip>
      </TooltipProvider>
    </motion.div>
  );
}